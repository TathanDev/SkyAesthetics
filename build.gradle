plugins {
    id 'dev.architectury.loom' version '1.7-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
    id 'me.modmuss50.mod-publish-plugin' version '0.6.3' apply false

}

architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'
    apply plugin: 'me.modmuss50.mod-publish-plugin'

    def modLoader = project.name

    base {
        // Set up a suffixed format for the mod jar names, e.g. `example-fabric`.
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        maven { url "https://maven.terraformersmc.com/releases" }
        maven { url "https://maven.shedaniel.me/" }
        maven { url "https://maven.saps.dev/releases" }
        maven { url "https://maven.parchmentmc.org" }
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }

    }

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.layered() {
            officialMojangMappings()
            parchment("org.parchmentmc.data:parchment-1.21:${rootProject.parchment_mapping_version}@zip")
        }

        if(modLoader != "quilt") {
            if(modLoader != "common") {
                modApi "me.shedaniel.cloth:cloth-config-$modLoader:15.0.140"
            }
            modApi "com.mrbysco.lunar:Lunar-$modLoader-1.21:0.2.0"
        }
    }

    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
    }

    publishMods {
        file = file("../${modLoader}/build/libs/sky_aesthetics-${modLoader}-${mod_version}.jar")
        changelog = file("../changelog.md").getText('UTF-8')
        type = STABLE
        modLoaders.add(modLoader)
        displayName = "[${modLoader.capitalize()}] Sky Aesthetics ${mod_version}"

        curseforge {
            projectId = "1096636"
            projectSlug = "sky-aesthetics" // Required for discord webhook
            accessToken = providers.environmentVariable("CURSEFORGE_API_KEY")
            minecraftVersions.add("${minecraft_version}")
            minecraftVersions.add("${supported_version}")
            javaVersions.add(JavaVersion.VERSION_21)
        }

        modrinth {
            projectId = "2zaNpyqY"
            accessToken = providers.environmentVariable("MODRINTH_TOKEN")
            minecraftVersions.add("${minecraft_version}")
            minecraftVersions.add("${supported_version}")
        }
    }

    if(modLoader != "quilt") {
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    groupId "fr.tathan.sky-aesthetics"
                    artifactId "sky-aesthetics-$modLoader-" + minecraft_version
                    version project.version
                    from components.java
                    pom {
                        name = "Sky Aesthetics" + modLoader.capitalize()
                        url = "https://github.com/TathanDev/SkyAesthetics"
                    }
                }
            }

            repositories {
                maven {
                    url = "https://maven.odysseyus.fr/releases/"
                    credentials {
                        username = System.getenv("MAVEN_USER")
                        password = System.getenv("MAVEN_PASS")
                    }
                }
            }
        }
    }

}
