plugins {
    id 'com.github.johnrengelman.shadow'
}

loom {
    accessWidenerPath.set(project(":common").loom.accessWidenerPath)
}


architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neoforge_version"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    inputs.property 'version', project.version

    filesMatching('META-INF/neoforge.mods.toml') {
        expand version: project.version
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    input.set shadowJar.archiveFile
}

publishMods {
    file = file("../neoforge/build/libs/sky_aesthetics-neoforge-${mod_version}.jar")
    changelog = file("../changelog.md").getText('UTF-8')
    type = STABLE
    modLoaders.add("neoforge")
    displayName = "[${"neoforge".capitalize()}] Sky Aesthetics ${mod_version}"

    curseforge {
        projectId = "1096636"
        projectSlug = "sky-aesthetics" // Required for discord webhook
        accessToken = providers.environmentVariable("CURSEFORGE_API_KEY")
        minecraftVersions.add("${minecraft_version}")
        javaVersions.add(JavaVersion.VERSION_21)
    }

    modrinth {
        projectId = "2zaNpyqY"
        accessToken = providers.environmentVariable("MODRINTH_TOKEN")
        minecraftVersions.add("${minecraft_version}")
    }
}